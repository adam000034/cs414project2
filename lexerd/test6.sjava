void main() {
	int size;
	int board[];

	size = read();
	board = new int[size];

	Solve(1, board,size);
}

void PrintBoard(int board[], int size) {
	int i;
	int j;

	for (i = 0; i < size; i++) {
		for (j=0; j<board[i]; j++)
			print(0);
		print(1);
		for(j=board[i]+1; j<size; j++)
			print(0);
		println();
	}
	println();
}

int Abs(int x) {
	if (x>=0)
		return x;
	else
		return 0-x;
}

boolean Legal(int numcols, int board[]) {
	int i;
	int j;
	boolean legal;

	legal = true;

	for (i=0; i < numcols; i++) {
		for (j=i+1; j < numcols; j++) {
			if ((board[i] == board[j]) || (Abs(i-j) == Abs(board[i]-board[j])))
				legal = false;
		}
	}
	return legal;
}

void Solve(int numcols, int board[], int size) {
	int i;

	if (numcols > size) {
		PrintBoard(board,size);
		println();
	}  else {
		for (i=0; i < size; i++) {
			board[numcols-1] = i;
			if (Legal(numcols, board)) {
				Solve(numcols+1, board, size);
			}
		}
	}
}